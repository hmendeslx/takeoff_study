png("LDG_RH.png")
plot(ldg_rh,type = "l",col="blue", ylab = "Main Landing Gear Right", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
lines(ldg_rh, type="l", col="brown",lwd=2)
# LG Nose
lgn <- min(which(flightdata$LDG_NOSE == "IN FLIGHT"))
ldg_nose <- c(1:nrows)
ldg_nose[1:(lgl-1)] <- 0
ldg_nose[lgl:nrows] <- 1
plot(ldg_nose)
plot(ldh_nose,type = "l",col="blue", ylab = "Nose Landing Gear", xlab = "Time [sec]")
plot(ldg_nose,type = "l",col="blue", ylab = "Nose Landing Gear", xlab = "Time [1/8 sec]")
grid(,,col="red")
png("LDG_NOSE.png")
plot(ldg_nose,type = "l",col="blue", ylab = "Nose Landing Gear", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
plot(ldg_lh, type="l",xlab="Time [sec]",col="blue",lwd=2)
lines(ldg_nose, type="l", col="black",lwd=2)
lines(ldg_rh, type="l", col="brown",lwd=2)
lgr <- min(which(flightdata$LDG_RH == "IN FLIGHT"))
ldg_rh <- c(1:nrows)
ldg_rh[1:(lgr-1)] <- 0
ldg_rh[lgr:nrows] <- 1
lgn <- min(which(flightdata$LDG_NOSE == "IN FLIGHT"))
ldg_nose <- c(1:nrows)
ldg_nose[1:(lgn-1)] <- 0
ldg_nose[lgn:nrows] <- 1
plot(ldg_lh, type="l",xlab="Time [sec]",col="blue",lwd=2)
lines(ldg_nose, type="l", col="black",lwd=2)
lines(ldg_rh, type="l", col="brown",lwd=2)
legend("topleft",legend=c("Landing Gear Left","Landing Gear Nose","Landing Gear Right")
,col=c("blue","black","brown"),bg="light blue",lwd=1, cex=1)
plot(ldg_lh, type="l",xlab="Time [sec]",col="blue",lwd=2)
lines(ldg_nose, type="l", col="black",lwd=2)
lines(ldg_rh, type="l", col="brown",lwd=2)
# abline(v=rot,col="green", lwd=2)
# abline(v=loff_sec,col="red", lwd=2)
grid(,,col="dark red")
legend("topleft",legend=c("Landing Gear Left","Landing Gear Nose","Landing Gear Right")
,col=c("blue","black","brown"),bg="light blue",lwd=1, cex=0.8)
png("landing_gear.png")
plot(ldg_lh, type="l",xlab="Time [sec]",col="blue",lwd=2)
lines(ldg_nose, type="l", col="black",lwd=2)
lines(ldg_rh, type="l", col="brown",lwd=2)
# abline(v=rot,col="green", lwd=2)
# abline(v=loff_sec,col="red", lwd=2)
grid(,,col="dark red")
legend("topleft",legend=c("Landing Gear Left","Landing Gear Nose","Landing Gear Right")
,col=c("blue","black","brown"),bg="light blue",lwd=1, cex=0.8)
dev.off()
png("landing_gear.png")
plot(ldg_lh, type="l",xlab="Time [sec]",col="blue",lwd=2)
lines(ldg_nose, type="l", col="black",lwd=2)
lines(ldg_rh, type="l", col="brown",lwd=2)
# abline(v=rot,col="green", lwd=2)
# abline(v=loff_sec,col="red", lwd=2)
grid(,,col="dark red")
legend("topleft",legend=c("Landing Gear Left","Landing Gear Nose","Landing Gear Right")
,col=c("blue","black","brown"),bg="light blue",lwd=1, cex=1)
dev.off()
names(flightdata)
##$##
gs <- approx(seq(1:nrows), flightdata$GS,xout=c(1:nrows), method="linear",n=nrows)$y
plot(gs)
plot(gs,type = "l",col="blue", ylab = "Ground Speed [Kts]", xlab = "Time [sec]")
png("GS.png")
plot(gs,type = "l",col="blue", ylab = "Ground Speed [Kts]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
names(flightdata)
cas <- approx(seq(1:nrows), flightdata$CAS,xout=c(1:nrows), method="linear",n=nrows)$y
plot(cas,type = "l",col="blue", ylab = "Calibrated Airspeed [Kts]", xlab = "Time [sec]")
png("CAS.png")
plot(cas,type = "l",col="blue", ylab = "Calibrated Airspeed [Kts]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
which(flightdata$RALT1==4095
)
max(flightdata$RALT1==4095)
max(flightdata$RALT1)
class(flightdata$RALT1)
plot(flightdata$RALT1)
max(flightdata$RALT1)
max()
max(flightdata$RALT1)
max(flightdata$RALT1==4094)
which(flightdata$RALT1==4094)
which(flightdata$RALT1==4093)
which(flightdata$RALT1==4092)
flightdata$RALT1[which(flightdata$RALT1==4095)] <- -1
flightdata$RALT1[which(flightdata$RALT1==4094)] <- -2
flightdata$RALT1[which(flightdata$RALT1==4092)] <- -4
plot(flightdata$RALT1)
flightdata$RALT1[which(flightdata$RALT1==4093)] <- -2
plot(flightdata$RALT1)
flightdata$RALT2[which(flightdata$RALT2==4095)] <- -1
flightdata$RALT2[which(flightdata$RALT2==4094)] <- -2
flightdata$RALT2[which(flightdata$RALT2==4093)] <- -2
flightdata$RALT2[which(flightdata$RALT2==4092)] <- -4
plot(lightdata$RALT2)
plot(flightdata$RALT2)
names(flightdata)
ralt1 <- approx(seq(1:nrows), flightdata$RALT1,xout=c(1:nrows), method="linear",n=nrows)$y
plot(ralt1)
ralt2 <- approx(seq(1:nrows), flightdata$RALT2,xout=c(1:nrows), method="linear",n=nrows)$y
plot(ralt2)
head(flightdata$RALT2)
head(flightdata$RALT2,20)
head(flightdata$RALT2,100)
head(flightdata$RALT2,500)
plot(ralt1,type = "l",col="blue", ylab = "Radio Altemeter #1 [ft]", xlab = "Time [sec]")
grid(,,col="red")
plot(ralt2,type = "l",col="blue", ylab = "Radio Altemeter #2 [ft]", xlab = "Time [sec]")
grid(,,col="red")
png("RALT1.png")
plot(ralt1,type = "l",col="blue", ylab = "Radio Altemeter #1 [ft]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("RALT2.png")
plot(ralt2,type = "l",col="blue", ylab = "Radio Altemeter #2 [ft]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
names(flightdata)
# Vertical acceleration
vertg <- flightdata$VERTG
plot(vertg,type = "l",col="blue", ylab = "Vertical Acceleration [g]", xlab = "Time [sec]")
grid(,,col="red")
png("VERTG.png")
plot(vertg,type = "l",col="blue", ylab = "Vertical Acceleration [g]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
elev_l <- approx(seq(1:nrows), flightdata$ELEV_L,xout=c(1:nrows), method="linear",n=nrows)$y
plot(elev_l)
elev_r <- approx(seq(1:nrows), flightdata$ELEV_R_A,xout=c(1:nrows), method="linear",n=nrows)$y
plot(elev_r)
plot(elev_r)
plot(elev_l,type = "l",col="blue", ylab = "Elevator Left [deg]", xlab = "Time [sec]")
grid(,,col="red")
png("ELEV_L.png")
plot(elev_l,type = "l",col="blue", ylab = "Elevator Left [deg]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
plot(elev_r,type = "l",col="blue", ylab = "Elevator Right [deg]", xlab = "Time [sec]")
grid(,,col="red")
png("ELEV_L.png")
plot(elev_l,type = "l",col="blue", ylab = "Elevator Left [deg]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("ELEV_R.png")
plot(elev_r,type = "l",col="blue", ylab = "Elevator Right [deg]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
gw <- approx(seq(1:nrows), flightdata$GW,xout=c(1:nrows), method="linear",n=nrows)$y
plot(gw)
plot(gw,type = "l",col="blue", ylab = "Gross Weight [Kg]", xlab = "Time [sec]")
grid(,,col="red")
png("GW.png")
plot(gw,type = "l",col="blue", ylab = "Gross Weight [Kg]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
cg <- approx(seq(1:nrows), flightdata$CG,xout=c(1:nrows), method="linear",n=nrows)$y
plot(cg)
plot(cg,type = "l",col="blue", ylab = "Centre of Gravity [%MAC]", xlab = "Time [sec]")
grid(,,col="red")
png("CG.png")
plot(cg,type = "l",col="blue", ylab = "Centre of Gravity [%MAC]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
names(flightdata)
long <- approx(seq(1:nrows), flightdata$LONG,xout=c(1:nrows), method="linear",n=nrows)$y
plot(long,type = "l",col="blue", ylab = "Longitudinal Acceleration [g]", xlab = "Time [sec]")
grid(,,col="red")
png("LONG.png")
plot(long,type = "l",col="blue", ylab = "Longitudinal Acceleration [g]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
pitch_rate <- approx(seq(1:nrows), flightdata$PITCH_RATE,xout=c(1:nrows), method="linear",n=nrows)$y
plot(pitch_rate,type = "l",col="blue", ylab = "Pitch Rate [deg/s]", xlab = "Time [sec]")
grid(,,col="red")
png("PITCH_RATE.png")
plot(pitch_rate,type = "l",col="blue", ylab = "Pitch Rate [deg/s]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
pitch_capt <- approx(seq(1:nrows), flightdata$PITCH_CAPT,xout=c(1:nrows), method="linear",n=nrows)$y
pitch_fo <- approx(seq(1:nrows), flightdata$PITCH_FO,xout=c(1:nrows), method="linear",n=nrows)$y
plot(pitch_capt,type = "l",col="blue", ylab = "Pitch Command Capt", xlab = "Time [sec]")
plot(pitch_fo,type = "l",col="blue", ylab = "Pitch Command FO", xlab = "Time [sec]")
png("PITCH_CAPT.png")
plot(pitch_capt,type = "l",col="blue", ylab = "Pitch Command Capt", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("PITCH_FO.png")
plot(pitch_fo,type = "l",col="blue", ylab = "Pitch Command FO", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
sat <- approx(seq(1:nrows), flightdata$SAT,xout=c(1:nrows), method="linear",n=nrows)$y
png("SAT.png")
plot(sat,type = "l",col="blue", ylab = "Static Air Temperature [deg C]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
plot(sat,type = "l",col="blue", ylab = "Static Air Temperature [deg C]", xlab = "Time [sec]")
png("SAT.png")
plot(sat,type = "l",col="blue", ylab = "Static Air Temperature [deg C]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
names(flightdata)
n1_1 <- approx(seq(1:nrows), flightdata$N1_1,xout=c(1:nrows), method="linear",n=nrows)$y
n1_2 <- approx(seq(1:nrows), flightdata$N1_2,xout=c(1:nrows), method="linear",n=nrows)$y
n1_3 <- approx(seq(1:nrows), flightdata$N1_3,xout=c(1:nrows), method="linear",n=nrows)$y
n1_3 <- approx(seq(1:nrows), flightdata$N1_4,xout=c(1:nrows), method="linear",n=nrows)$y
n2_1 <- approx(seq(1:nrows), flightdata$N2_1,xout=c(1:nrows), method="linear",n=nrows)$y
n2_1 <- approx(seq(1:nrows), flightdata$N2_1,xout=c(1:nrows), method="linear",n=nrows)$y
n2_2 <- approx(seq(1:nrows), flightdata$N2_2,xout=c(1:nrows), method="linear",n=nrows)$y
n2_3 <- approx(seq(1:nrows), flightdata$N2_3,xout=c(1:nrows), method="linear",n=nrows)$y
n2_4 <- approx(seq(1:nrows), flightdata$N2_4,xout=c(1:nrows), method="linear",n=nrows)$y
png("N1_1.png")
plot(n1_1,type = "l",col="blue", ylab = "N1 Eng #1 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N1_2.png")
plot(n1_2,type = "l",col="blue", ylab = "N1 Eng #2 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N1_3.png")
plot(n1_3,type = "l",col="blue", ylab = "N1 Eng #3 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N1_4.png")
plot(n1_4,type = "l",col="blue", ylab = "N1 Eng #4 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
n1_4 <- approx(seq(1:nrows), flightdata$N1_4,xout=c(1:nrows), method="linear",n=nrows)$y
png("N1_4.png")
plot(n1_4,type = "l",col="blue", ylab = "N1 Eng #4 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_2.png")
plot(n2_1,type = "l",col="blue", ylab = "N2 Eng #2 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_3.png")
plot(n2_2,type = "l",col="blue", ylab = "N2 Eng #3 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_1.png")
plot(n2_1,type = "l",col="blue", ylab = "N2 Eng #1 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_2.png")
plot(n2_2,type = "l",col="blue", ylab = "N2 Eng #2 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_3.png")
plot(n2_3,type = "l",col="blue", ylab = "N2 Eng #3 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_4.png")
plot(n2_4,type = "l",col="blue", ylab = "N2 Eng #4 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
# PDF Reporting creation
brew("takeoff_study.brew", paste0('takeoff_study',s,".tex"))
source('~/Projects/R/flightRtools/takeoff_study/src/takeoff_study.R')
# Clean workspace (& environment data)
rm(list=ls(all=TRUE))
# Capture working directory
# reset workind directory manually
# setwd("/home/hmendes/Projects/R/flightRtools/takeoff_study")
#
work_dir <- getwd()
#library(ggplot2)
library(brew)
library(data.table)
# file list capture
setwd("data")
fileList <- list.files(path=getwd(), pattern=".csv")
s <- 1
## LOAD Flight From List
#setwd("data")
flightdata <- fread(fileList[s],sep=",",header=T, stringsAsFactors = F, verbose=FALSE,
colClasses = c(LDG_LH='character', LDG_NOSE='character', LDG_RH='character',
FLAPL_0='character', FLAPL_1='character', FLAPL_2='character',
FLAPL_3='character', FLAPL_F='character', FLIGHT_PHASE='character' ))
nrows <- NROW(flightdata)
##### Langing Gear parameters #####
# Way to obtain the LG parameter @ 1Hz (discontinued @ 8Hz)
# LDG_LH <- as.numeric(!as.numeric(as.factor(flightdata$LDG_LH))-1)
# LDG_RH <- as.numeric(!as.numeric(as.factor(flightdata$LDG_RH))-1)
# LDG_NOSE <- as.numeric(!as.numeric(as.factor(flightdata$LDG_NOSE))-1)
# LG Left
lgl <- min(which(flightdata$LDG_LH == "IN FLIGHT"))
ldg_lh <- c(1:nrows)
ldg_lh[1:(lgl-1)] <- 0
ldg_lh[lgl:nrows] <- 1
# LG Right
lgr <- min(which(flightdata$LDG_RH == "IN FLIGHT"))
ldg_rh <- c(1:nrows)
ldg_rh[1:(lgr-1)] <- 0
ldg_rh[lgr:nrows] <- 1
# LG Nose
lgn <- min(which(flightdata$LDG_NOSE == "IN FLIGHT"))
ldg_nose <- c(1:nrows)
ldg_nose[1:(lgn-1)] <- 0
ldg_nose[lgn:nrows] <- 1
# Radio Altitude corrections
# RALT1
flightdata$RALT1[which(flightdata$RALT1==4095)] <- -1
flightdata$RALT1[which(flightdata$RALT1==4094)] <- -2
flightdata$RALT1[which(flightdata$RALT1==4093)] <- -2
flightdata$RALT1[which(flightdata$RALT1==4092)] <- -4
# RALT2
flightdata$RALT2[which(flightdata$RALT2==4095)] <- -1
flightdata$RALT2[which(flightdata$RALT2==4094)] <- -2
flightdata$RALT2[which(flightdata$RALT2==4093)] <- -2
flightdata$RALT2[which(flightdata$RALT2==4092)] <- -4
# Vertical acceleration
vertg <- flightdata$VERTG
### Interpolations
gs <- approx(seq(1:nrows), flightdata$GS,xout=c(1:nrows), method="linear",n=nrows)$y
cas <- approx(seq(1:nrows), flightdata$CAS,xout=c(1:nrows), method="linear",n=nrows)$y
ralt1 <- approx(seq(1:nrows), flightdata$RALT1,xout=c(1:nrows), method="linear",n=nrows)$y
ralt2 <- approx(seq(1:nrows), flightdata$RALT2,xout=c(1:nrows), method="linear",n=nrows)$y
elev_l <- approx(seq(1:nrows), flightdata$ELEV_L,xout=c(1:nrows), method="linear",n=nrows)$y
elev_r <- approx(seq(1:nrows), flightdata$ELEV_R_A,xout=c(1:nrows), method="linear",n=nrows)$y
cg <- approx(seq(1:nrows), flightdata$CG,xout=c(1:nrows), method="linear",n=nrows)$y
gw <- approx(seq(1:nrows), flightdata$GW,xout=c(1:nrows), method="linear",n=nrows)$y
long <- approx(seq(1:nrows), flightdata$LONG,xout=c(1:nrows), method="linear",n=nrows)$y
pitch <- approx(seq(1:nrows), flightdata$PITCH,xout=c(1:nrows), method="linear",n=nrows)$y
pitch_rate <- approx(seq(1:nrows), flightdata$PITCH_RATE,xout=c(1:nrows), method="linear",n=nrows)$y
pitch_capt <- approx(seq(1:nrows), flightdata$PITCH_CAPT,xout=c(1:nrows), method="linear",n=nrows)$y
pitch_fo <- approx(seq(1:nrows), flightdata$PITCH_FO,xout=c(1:nrows), method="linear",n=nrows)$y
sat <- approx(seq(1:nrows), flightdata$SAT,xout=c(1:nrows), method="linear",n=nrows)$y
n1_1 <- approx(seq(1:nrows), flightdata$N1_1,xout=c(1:nrows), method="linear",n=nrows)$y
n1_2 <- approx(seq(1:nrows), flightdata$N1_2,xout=c(1:nrows), method="linear",n=nrows)$y
n1_3 <- approx(seq(1:nrows), flightdata$N1_3,xout=c(1:nrows), method="linear",n=nrows)$y
n1_4 <- approx(seq(1:nrows), flightdata$N1_4,xout=c(1:nrows), method="linear",n=nrows)$y
n2_1 <- approx(seq(1:nrows), flightdata$N2_1,xout=c(1:nrows), method="linear",n=nrows)$y
n2_2 <- approx(seq(1:nrows), flightdata$N2_2,xout=c(1:nrows), method="linear",n=nrows)$y
n2_3 <- approx(seq(1:nrows), flightdata$N2_3,xout=c(1:nrows), method="linear",n=nrows)$y
n2_4 <- approx(seq(1:nrows), flightdata$N2_4,xout=c(1:nrows), method="linear",n=nrows)$y
# fuel_gw <- gw_ini - gw_final
time_considered <- nrows
flaps_takeoff <- flightdata$FLAPL_3[10] # correct with IF condition in case other position is used
nulltext <- "TBC"
# # calculo de consumo atrav?s do FF - comparar com o de cima
# Graphics
# Fast Testing Command:
# > with(data_takeoff, plot(FF1, N21, type="l", col="blue")); grid(,,col="dark red")
setwd(work_dir)
setwd("output")
png("GS.png")
plot(gs,type = "l",col="blue", ylab = "Ground Speed [Kts]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("CAS.png")
plot(cas,type = "l",col="blue", ylab = "Calibrated Airspeed [Kts]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("RALT1.png")
plot(ralt1,type = "l",col="blue", ylab = "Radio Altemeter #1 [ft]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("RALT2.png")
plot(ralt2,type = "l",col="blue", ylab = "Radio Altemeter #2 [ft]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("ELEV_L.png")
plot(elev_l,type = "l",col="blue", ylab = "Elevator Left [deg]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("ELEV_R.png")
plot(elev_r,type = "l",col="blue", ylab = "Elevator Right [deg]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("CG.png")
plot(cg,type = "l",col="blue", ylab = "Centre of Gravity [%MAC]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("GW.png")
plot(gw,type = "l",col="blue", ylab = "Gross Weight [Kg]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("LONG.png")
plot(long,type = "l",col="blue", ylab = "Longitudinal Acceleration [g]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("VERTG.png")
plot(vertg,type = "l",col="blue", ylab = "Vertical Acceleration [g]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("PITCH.png")
plot(pitch,type = "l",col="blue", ylab = "Pitch [deg]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("PITCH_RATE.png")
plot(pitch_rate,type = "l",col="blue", ylab = "Pitch Rate [deg/s]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("PITCH_CAPT.png")
plot(pitch_capt,type = "l",col="blue", ylab = "Pitch Command Capt", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("PITCH_FO.png")
plot(pitch_fo,type = "l",col="blue", ylab = "Pitch Command FO", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("SAT.png")
plot(sat,type = "l",col="blue", ylab = "Static Air Temperature [deg C]", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("N1_1.png")
plot(n1_1,type = "l",col="blue", ylab = "N1 Eng #1 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N1_2.png")
plot(n1_2,type = "l",col="blue", ylab = "N1 Eng #2 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N1_3.png")
plot(n1_3,type = "l",col="blue", ylab = "N1 Eng #3 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N1_4.png")
plot(n1_4,type = "l",col="blue", ylab = "N1 Eng #4 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_1.png")
plot(n2_1,type = "l",col="blue", ylab = "N2 Eng #1 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_2.png")
plot(n2_2,type = "l",col="blue", ylab = "N2 Eng #2 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_3.png")
plot(n2_3,type = "l",col="blue", ylab = "N2 Eng #3 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("N2_4.png")
plot(n2_4,type = "l",col="blue", ylab = "N2 Eng #4 [%]", xlab = "Time [sec]")
grid(,,col="red")
dev.off()
png("LDG_LH.png")
plot(ldg_lh,type = "l",col="blue", ylab = "Main Landing Gear Left", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("LDG_RH.png")
plot(ldg_rh,type = "l",col="blue", ylab = "Main Landing Gear Right", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("LDG_NOSE.png")
plot(ldg_nose,type = "l",col="blue", ylab = "Nose Landing Gear", xlab = "Time [1/8 sec]")
grid(,,col="red")
dev.off()
png("landing_gear.png")
plot(ldg_lh, type="l",xlab="Time [sec]",col="blue",lwd=2)
lines(ldg_nose, type="l", col="black",lwd=2)
lines(ldg_rh, type="l", col="brown",lwd=2)
# abline(v=rot,col="green", lwd=2)
# abline(v=loff_sec,col="red", lwd=2)
grid(,,col="dark red")
legend("topleft",legend=c("Landing Gear Left","Landing Gear Nose","Landing Gear Right")
,col=c("blue","black","brown"),bg="light blue",lwd=1, cex=1)
dev.off()
# PDF Reporting creation
brew("takeoff_study.brew", paste0('takeoff_study',s,".tex"))
texi2dvi(paste0('takeoff_study',s,".tex"), pdf = TRUE)
system("echo $PATH")
Sys.getenv("PATH")
traceback()
texi2dvi(paste0('takeoff_study',s,".tex"), pdf = TRUE)
traceback()
getwd()
setwd("output")
texi2dvi(paste0('takeoff_study',s,".tex"), pdf = TRUE)
system("echo $PATH")
system("ls -l")
system("pdflatex takeoff_study1.tex")
nome_do_ficheiro <- paste0('takeoff_study',s,".tex")
nome_do_ficheiro
paste0('takeoff_study',s,".tex")
brew("takeoff_study.brew", "takeoff_study.tex")
#library(ggplot2)
library(brew)
library(data.table)
brew("takeoff_study.brew", "takeoff_study.tex")
system("pdflatex takeoff_study.tex")
nome_do_ficheiro <- paste0('takeoff_study',s,".pdf")
nome_do_ficheiro
xxx <- "mv takeoff_study.pdf"
xxx
xxx+nome_do_ficheiro
xxx
paste(xxx,nome_do_ficheiro)
init_command <- "mv takeoff_study.pdf"
rename_file  <- paste(init_command,nome_do_ficheiro)
rename_file
system(rename_file)
#brew("takeoff_study.brew", paste0('takeoff_study',s,".tex"))
brew("takeoff_study.brew", "takeoff_study.tex")
system("pdflatex takeoff_study.tex")
nome_do_ficheiro <- paste0('takeoff_study',s,".pdf")
init_command <- "mv takeoff_study.pdf"
rename_file  <- paste(init_command,nome_do_ficheiro)
system(rename_file)
source('~/Projects/R/flightRtools/takeoff_study/src/takeoff_study.R')
getwd()
setwd(work_dir)
getwd()
source('~/Projects/R/flightRtools/takeoff_study/src/takeoff_study.R')
